RobotArmController::
---------------------------
Setup() -> Checks validity of other commands for this class
LimpMode(bool isLimp) -> Disengage all motors 
Read() -> Grab current angles and print to screen
Home() -> Return to natural position (157.5, 157.5, 157.5, 157.5, 257.5, 90.0)
SetCoordinates(RobotCommandParser::Argument *args, char *response) -> Takes args as list containing angles to be moved to // Called when joints need to be moved, moves all simultaneously // Calls _servo.setPosition(uint8_t const id, float const angle_deg)
SetServo(RobotCommandParser::Argument *args, char *response) ->

SetSpeed(RobotCommandParser::Argument *args, char *response) -> needs testing, presumably sets speed in deg/sec


SmartServoClass::
---------------------------
setPosition(uint8_t const id, float const angle_deg) -> Moves a joint to angle_deg // called by RobotArmController::SetCoordinates()



Serial commands
----------------------------
"LIMP" -> Disengage all motors. Takes 1 integer, fails if it is <=0
"READ" -> Retrieve the current positions of each motor
"HOME" -> Return to natural position (157.5, 157.5, 157.5, 157.5, 257.5, 90.0)
"SETX dddddd" -> Move all joints to a position. Takes 6 doubles, one for each joint
"SET id" -> Move a joint to a certain position. Takes an int for the joint and a double for the angle
"MOVE id" -> Move a joint by a certain amount. Takes an int for the joint and a double for the angle
"SPEED d" -> Adjust the speed of the motors. Takes an int that must be 1000, 100 or 10, which will set it to Slow, Medium or Fast